load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/dotmesh-io/dotmesh/cmd/operator",
    visibility = ["//visibility:private"],
    deps = [
        "//cmd/operator/vendor/github.com/golang/glog:go_default_library",
        "//cmd/operator/vendor/github.com/gorilla/mux:go_default_library",
        "//cmd/operator/vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//cmd/operator/vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//cmd/operator/vendor/k8s.io/api/core/v1:go_default_library",
        "//cmd/operator/vendor/k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//cmd/operator/vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//cmd/operator/vendor/k8s.io/apimachinery/pkg/labels:go_default_library",
        "//cmd/operator/vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//cmd/operator/vendor/k8s.io/apimachinery/pkg/util/intstr:go_default_library",
        "//cmd/operator/vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//cmd/operator/vendor/k8s.io/apimachinery/pkg/watch:go_default_library",
        "//cmd/operator/vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//cmd/operator/vendor/k8s.io/client-go/listers/core/v1:go_default_library",
        "//cmd/operator/vendor/k8s.io/client-go/rest:go_default_library",
        "//cmd/operator/vendor/k8s.io/client-go/tools/cache:go_default_library",
        "//cmd/operator/vendor/k8s.io/client-go/tools/clientcmd:go_default_library",
    ],
)

go_image(
    name = "operator",
    importpath = "github.com/dotmesh-io/dotmesh/cmd/operator",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
)

container_push(
   name = "operator_push",
   image = ":operator",
   format = "Docker",
   registry = "quay.io",
   repository = "dotmesh/operator",
   tag = "dev",
)