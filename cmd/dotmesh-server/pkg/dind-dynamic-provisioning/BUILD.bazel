load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")

go_library(
    name = "go_default_library",
    srcs = ["dind-provisioner.go"],
    importpath = "github.com/dotmesh-io/dotmesh/cmd/dotmesh-server/pkg/dind-dynamic-provisioning",
    visibility = ["//visibility:private"],
    deps = [
        "//cmd/dotmesh-server/pkg/dind-dynamic-provisioning/vendor/github.com/golang/glog:go_default_library",
        "//cmd/dotmesh-server/pkg/dind-dynamic-provisioning/vendor/github.com/kubernetes-incubator/external-storage/lib/controller:go_default_library",
        "//cmd/dotmesh-server/pkg/dind-dynamic-provisioning/vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//cmd/dotmesh-server/pkg/dind-dynamic-provisioning/vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//cmd/dotmesh-server/pkg/dind-dynamic-provisioning/vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//cmd/dotmesh-server/pkg/dind-dynamic-provisioning/vendor/k8s.io/client-go/pkg/api/v1:go_default_library",
        "//cmd/dotmesh-server/pkg/dind-dynamic-provisioning/vendor/k8s.io/client-go/rest:go_default_library",
    ],
)

go_image(
    importpath = "github.com/dotmesh-io/dotmesh/cmd/dotmesh-server/pkg/dind-dynamic-provisioning",
    name = "dind-dynamic-provisioning",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
)

container_push(
   name = "dind_push",
   image = ":dind-dynamic-provisioning",
   format = "Docker",
   registry = "{CI_REGISTRY}",
   repository = "dotmesh/dind-dynamic-provisioning",
   tag = "{DOCKERTAG}",
   stamp = True,
)