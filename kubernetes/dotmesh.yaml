---
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: dotmesh
      #annotations:
      #  dotmesh.io/key: value
      labels:
        name: dotmesh
      namespace: dotmesh
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: dotmesh-operator
      #annotations:
      #  dotmesh.io/key: value
      labels:
        name: dotmesh-operator
      namespace: dotmesh
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRole
    metadata:
      name: dotmesh
      #annotations:
      #  dotmesh.io/key: value
      labels:
        name: dotmesh
    rules:
      - apiGroups:
          - ''
        resources:
          - pods
          - namespaces
          - nodes
        verbs:
          - get
          - list
          - watch
  # TODO: bind to system:persistent-volume-provisioner?
  # https://kubernetes.io/docs/admin/authorization/rbac/#other-component-roles
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: dotmesh
      #annotations:
      #  dotmesh.io/key: value
      labels:
        name: dotmesh
    roleRef:
      kind: ClusterRole
      name: dotmesh
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: dotmesh
        namespace: dotmesh
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: dotmesh-operator
      #annotations:
      #  dotmesh.io/key: value
      labels:
        name: dotmesh
    roleRef:
      kind: ClusterRole
      name: cluster-admin
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: dotmesh-operator
        namespace: dotmesh
  - apiVersion: v1
    kind: Service
    metadata:
      name: dotmesh
      namespace: dotmesh
    spec:
      type: NodePort
      ports:
      - port: 32607
        nodePort: 32607
        protocol: TCP
      selector:
        dotmesh.io/role: dotmesh-server
  - apiVersion: apps/v1beta1
    kind: Deployment
    metadata:
      name: dotmesh-operator
      namespace: dotmesh
      labels:
        app: dotmesh-operator
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: dotmesh-operator
      template:
        metadata:
          labels:
            app: dotmesh-operator
        spec:
          serviceAccount: dotmesh-operator
          containers:
            - name: dotmesh-operator
              image: 'quay.io/dotmesh/dotmesh-operator:DOCKER_TAG'
              imagePullPolicy: "IfNotPresent"
              ports:
                - name: op-monitor
                  containerPort: 32608
                  protocol: TCP
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: dotmesh-provisioner
      labels:
        name: dotmesh-provisioner
      namespace: dotmesh
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRole
    metadata:
      name: dotmesh-provisioner-runner
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch", "create", "delete"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims"]
        verbs: ["get", "list", "watch", "update"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["storageclasses"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["list", "watch", "create", "update", "patch"]
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: dotmesh-provisioner
    subjects:
      - kind: ServiceAccount
        name: dotmesh-provisioner
        namespace: dotmesh
    roleRef:
      kind: ClusterRole
      name: dotmesh-provisioner-runner
      apiGroup: rbac.authorization.k8s.io
  - apiVersion: apps/v1beta1 # for versions <1.8.0; use apps/v1beta2 for versions >=1.8.0
    kind: Deployment
    metadata:
      name: dotmesh-dynamic-provisioner
      namespace: dotmesh
      labels:
        app: dotmesh-dynamic-provisioner
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: dotmesh-dynamic-provisioner
      template:
        metadata:
          labels:
            app: dotmesh-dynamic-provisioner
        spec:
          serviceAccount: dotmesh-provisioner
          containers:
          - name: dotmesh-dynamic-provisioner
            image: 'quay.io/dotmesh/dotmesh-dynamic-provisioner:DOCKER_TAG'
            imagePullPolicy: "IfNotPresent"
            env:
            - name: DOTMESH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: dotmesh
                  key: dotmesh-api-key.txt
  - apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: dotmesh
    provisioner: dotmesh/dotmesh-dynamic-provisioner
    parameters:
      # Sensible defaults
      dotmeshNamespace: "admin"
